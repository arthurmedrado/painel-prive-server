### HTTP redirect http://... -> https://...
server {
  listen 80;
  listen [::]:80;
  server_name <%= ([''] + fetch(:ssl_domains, [])).join(' ') %>;
  return 301 https://$host$request_uri;
}

### CDN
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name <%= fetch(:cdn_domain) %>;
  root <%= fetch(:cdn_path) %>;
  index index.html;
  gzip on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_proxied any;
  gzip_buffers 16 8k;
  gzip_vary on;
  gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

  ssl_certificate /etc/letsencrypt/live/<%= fetch(:domain) %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= fetch(:domain) %>/privkey.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security max-age=15768000;

  location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|xml)$ {
    expires max;
  }

  location ~* \.(eot|ttf|woff|woff2|svg)$ {
    expires 90d;
    add_header Access-Control-Allow-Origin '*';
  }

  location / {
    expires 1d;
  }
}

upstream app {
  server unix:<%= fetch(:current_path) %>/tmp/sockets/unicorn.sock fail_timeout=0;
}

### App server
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  root <%= fetch(:current_path) %>/public;
  index index.html;
  server_name <%= fetch(:domain) %>;

  ssl_certificate /etc/letsencrypt/live/<%= fetch(:domain) %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= fetch(:domain) %>/privkey.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security max-age=15768000;
  
  error_page 404 404.html
  error_page 500 502 503 504 500.html

  location / {
    try_files $uri/index.html $uri.html $uri @app;
  }

  location ~* ^.+\.(jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mp3|flv|mpeg|avi)$ {
    try_files $uri @app;
  }

  location @app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Ssl on; # Optional
    proxy_set_header Host $http_host;
    # proxy_set_header Host $host;
    proxy_redirect off;
    proxy_pass http://app;
  }
}
